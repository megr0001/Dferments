---
const {h2, p, billede, buttontxt, alt} = Astro.props;
const { data } = Astro.props;
---
<div class="tiden">
  <div class="image_container2 startposition" id="imageFull">
    <img src={billede} alt={alt}>
      <div class="overlay">
        <div class="standard">
		      <h2>{h2}</h2>
		      <p>{p}</p>
         <button class="button buttonClicked" id="imageFull">{buttontxt}</button>
        </div> 
  </div>
</div>
</div>

<style>
.tiden {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.image_container2 {
  position: relative;
  display: inline-block;
  border-radius: 10px;
  transition: all 0.6s ease-out;
}

.image_container2.startposition {
    width: 360px;
    height: 430px;
      overflow: hidden;
    /* transform: scale(1); */
}

.image_container2.full {
  width: 88%;
  height: auto;
  overflow: visible;
}

.image_container2 img {
  display: block;
  border-radius: 10px;
    width: 100%; 
  height: 100%;
    object-fit: cover;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 0.8)
  );
  border-radius: 10px;
  z-index: 1;
  pointer-events: none; /* Sikrer at overlayet ikke forstyrrer klik */
}

.standard {
    position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.standard h2, p {
      position: absolute;
  max-width: 65ch;
}

.standard h2 {
    font-size: 24px;
    font-family: var(--h2-font);
    bottom: 70px;
  left: 20px;
    text-transform: uppercase;
    color: var(--yellow);
}

.standard p {
  font-size: 20px;
  bottom: 38px;
  left: 20px;
    color: var(--beige);
}

.button {
position: absolute;
 border-radius: 10px;
 border: none;

    width: 101%;
  height: 100%;
  font-family: var(--h1-font);
  font-size: 40px;
  letter-spacing: 2px;
  background: var(--red);
  -webkit-mask: url("https://raw.githubusercontent.com/robin-dela/css-mask-animation/master/img/urban-sprite.png");
  mask: url("https://raw.githubusercontent.com/robin-dela/css-mask-animation/master/img/urban-sprite.png");
  -webkit-mask-size: 3000% 100%;
  mask-size: 3000% 100%;
  color: var(--yellow600);
  cursor: pointer;
  -webkit-animation: ani2 0.7s steps(29) forwards;
  animation: ani2 0.7s steps(29) forwards;

    pointer-events: auto; 
    /* masks and animation fra Copyright (c) 2024 by Yugam (https://codepen.io/pizza3/pen/qmerBv)*/
}

.button:hover {
  background-color: var(--codGrey);
  color: var(--yellow600);
 -webkit-animation: ani 0.7s steps(29) forwards;
  animation: ani 0.7s steps(29) forwards;
}

.button.active {
   /* -webkit-mask: none;
  mask: none;  */
  background-color: transparent;
  color: transparent;
}
@-webkit-keyframes ani {
  from {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
  to {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
}

@keyframes ani {
  from {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
  to {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
}

@-webkit-keyframes ani2 {
  from {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
  to {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
}

@keyframes ani2 {
  from {
    -webkit-mask-position: 100% 0;
    mask-position: 100% 0;
  }
  to {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
}
   /* masks and animation fra Copyright (c) 2024 by Yugam (https://codepen.io/pizza3/pen/qmerBv)*/

   @media (min-width: 800px) {
.image_container2.startposition {
    width: 450px;
    height: 500px;
}

.image_container2.full {
  width: 65%;
  height: auto;
  padding: 0;
}

.standard p {
  font-size: 24px;
  bottom: 24px;
}

.button {
  font-size: 52px;
}
   }
</style>

<script>
 document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".button");
    const productLists = document.querySelectorAll(".productlist");
    const arrowDown = document.querySelector(".arrow")

    // Function to deactivate all buttons and lists
    function deactivateAll() {
        buttons.forEach(btn => btn.classList.remove("active"));
        productLists.forEach(list => list.classList.remove("active"));
    }

    // Add click event to each button
    buttons.forEach((button, index) => {
        button.addEventListener("click", (event) => {
            event.stopPropagation(); // Prevent the click event from bubbling up to the document
            
            // If the button is already active, deactivate it and its corresponding list
            if (button.classList.contains("active")) {
                button.classList.remove("active");
                productLists[index].classList.remove("active");
                arrowDown.classList.remove("active");
            } else {
                // Otherwise, deactivate all and activate the clicked button and its corresponding list
                deactivateAll();
                button.classList.add("active");
                productLists[index].classList.add("active");
                arrowDown.classList.add("active");
            }
        });
    });

    // Prevent list click from closing itself
    productLists.forEach((list) => {
        list.addEventListener("click", (event) => {
            event.stopPropagation();
        });
    });

    // Hide arrowDown when scrolling to the bottom
    window.addEventListener("scroll", () => {
        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
            arrowDown.classList.remove("active");
        }
    });
});

document.addEventListener("DOMContentLoaded", function() {
    // Hent alle knapper og billeder
    const buttons = document.querySelectorAll('.button');
    const images = document.querySelectorAll('.image_container2');

    // Tilføj event listener til hver knap
    buttons.forEach((button, index) => {
        button.addEventListener('click', function() {
            // Først, sæt alle billeder til "full"
            images.forEach((image, imgIndex) => {
                if (imgIndex !== index) {
                    image.classList.remove('full');
                    image.classList.add('startposition');
                }
            });

            // Skift tilstanden for det klikkede billede
            const image = images[index];
            if (image.classList.contains('startposition')) {
                image.classList.remove('startposition');
                image.classList.add('full');
            } else {
                image.classList.remove('full');
                image.classList.add('startposition');
            }
        });
    });
});
</script>