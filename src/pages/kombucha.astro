---
import MainLayout from "../layouts/MainLayout.astro";
import Tiden from "../components/products/Tiden.astro";
const data = await fetch("https://jzfjblexhwoijgbgmixy.supabase.co/rest/v1/dferments",
{
    method: "GET",
    headers: {
        apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp6ZmpibGV4aHdvaWpnYmdtaXh5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTAzNDIxMTQsImV4cCI6MjAyNTkxODExNH0.O7nP4UolRZVDGhGQ3-0RoYhP0SEzLOyHHhp125SwNvw"
    },
}
).then((res) => res.json());
// console.log(data);
---

<MainLayout title="DRINK ME">
  <h1>Products</h1>
    <div class="time_container">
      <section class="products past_products">
        <div>
          <Tiden
          h2="The past"
          p="How did it start?"
          billede="/img/products/past.webp" alt="Billede af diverse kombucha smag."
          buttontxt="PAST"/>
        </div>
        <ul class="productlist">
          {data
          // Javascript-udtryk: JSX åbner et array med produktdata hentet fx fra Supabase.
          .sort((a, b) => a.id - b.id)
          // sorterer data array i alfabetisk rækkefølge.
          .map((product) => {
            // Itererer over hvert element (produkt) i den sorterede data array. 
            if (product.category === 'past') {
              // Kontrollerer om produktets kategori er past. Kun produkter med denne kategori vil blive vist.
              return (
                <article class="time">
                  <a href={`/products/${product.slug}`}>
                    {/* Opretter et link (<a>-tag) til produktets detaljerede side. href-attributten dynamisk genereres ved hjælp af produktets slug.*/}
                    <h2>{product.product_name}</h2>
                  </a>
                  <p>{product.beskrivelse}</p>
                </article>
              );
            } else {
              return null;
            }
          })}
        </ul>
      </section>
      <section class="products present_products">
        <div>
          <Tiden
          h2="The present"
          p="What's in the moment?"
          billede="/img/products/present.webp" alt="Billede af diverse kombucha smag."
          buttontxt="PRESENT"/>
        </div>
        <ul class="productlist">
          {data
          .sort((a, b) => a.id - b.id)
          .map((product) => {
            if (product.category === 'present') {
              return (
                <article class="time">
                 <a href={`/products/${product.slug}`}>
                  <h2>{product.product_name}</h2>
                  </a>
                  <p>{product.beskrivelse}</p>
                  <div class="image_container">
                  <img src={product.img} alt={product.beskrivelse} />
                  </div>
                </article>
              );
            } else {
              return null;
            }
          })}
        </ul>
      </section>
      <section class="products future_products">
        <div>
          <Tiden
          h2="The future"
          p="What comes next?"
          billede="/img/products/future.webp" alt="Billede af diverse kombucha smag."
          buttontxt="FUTURE"/>   
        </div>
        <ul class="productlist">
          {data
          .sort((a, b) => a.id - b.id)
          .map((product) => {
            if (product.category === 'future') {
              return (
                <article class="time">
                  <a href={`/products/${product.slug}`}>
                  <h2>{product.product_name}</h2>
                  </a>
                  <p>{product.beskrivelse}</p>
                </article>
              );
            } else {
              return null;
            }
          })}
        </ul>
      </section>
    </div>
    <div class="arrow bounce"></div>
</MainLayout>

<style>
h1 {
  margin: 2.5rem 0 3.5rem;
  text-align: center;
  font-family: var(--h1-font);
  font-size: var(--h1-sizeM);
  text-transform: uppercase;
  color: var(--red);
}
.time_container {
  margin-bottom: 2.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 48px;
}
.productlist {
  display: none;
  /* sørger for at listen ikke er der, før den aktiveres */
}
.productlist.active {
  display: block;
  margin: 2.5rem auto;
  /* baggrunden */
  background:
    url(/img/products/tealeaf.svg) left top,
    url(/img/products/flowerleft.svg) center center,
    url(/img/products/flowerright.svg) bottom right;
  background-repeat: no-repeat;
  background-size: 40%, 100%, 80%;
}
.time {
  margin: 3.5rem 2rem;
  border-bottom: 2px solid var(--red950);
}
.time a {
  text-decoration: none;
  color: inherit;
}
.time a:visited { /* visited link */
  color: inherit;
}
.time a:hover { /* hover link */
  text-decoration: underline;
  color: var(--yellow);
}
.time h2 {
  margin-bottom: 1rem;
  font-family: var(--h2-font);
  font-size: var(--h2-sizeM);
  text-transform: uppercase;
  font-style: italic;
}
.time p {
  margin-bottom: 1.5rem;
  font-family: var(--primary-font);
  font-size: 18px;
}
.time img {
  display: block;
  width: 100%;
  height: auto;
  margin: 2.5rem 0 1.5rem;
  border-radius: 10px;
}
article.time:nth-of-type(2n) {
  text-align: right; /* Juster tekstjusteringen til højre for hver anden .time article */
  color: var(--red);
}
/* Animation for productlist.active */
.animated.moveUp {
  animation: moveUp 1s forwards;
}
@keyframes moveUp {
  0% {
    opacity: 0;
    transform: translateY(40px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/* Arrow bounce styles */
.arrow.active {
  position: fixed;
  margin-left: -35px;
  bottom: 30px;
  left: 50%;
  width: 70px;
  height: 70px;
  background-image: url(/img/products/arrowdown.svg);
  background-size: contain;
  z-index: 10;
}
.bounce {
  animation: bounce 2s infinite;
}
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  60% {
    transform: translateY(-15px);
  }
}
/* Desktop Styles */
@media (min-width: 800px) {
  h1 {
    margin: 6rem 0 4rem;
    font-size: var(--h1-sizeD);
  }
  .time_container {
    margin-bottom: 6rem;
    margin-inline: 4rem;
    flex-direction: row;
    align-items: flex-start;
    gap: 1rem;
  }
  .productlist.active {
    margin: 4rem 0;
    padding: 2rem;
    background-position: left top, center center, right bottom;
    background-size: 30%, 90%, 60%;
  }
  .past_products .productlist.active,
  .present_products .productlist.active,
  .future_products .productlist.active {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: stretch;
    margin-left: -50vw;
    margin-right: -50vw;
    right: 50%;
    max-width: 100vw;
    width: 99vw;
    height: auto;
  }
  .past_products .productlist.active {
    left: 155%;
  }
  .present_products .productlist.active {
    left: 51%;
  }
  .present_products .time {
     height: 840px; /* mellemrum mellem img og borderbottom */
  }
   .future_products .productlist.active {
    left: -55%;
  }
  .products {
    margin-bottom: 0;
    flex: 1;
  }
  .time {
    margin: 2rem 0 4rem;
    flex-basis: calc(33.33% - 3rem); /* Beregn bredden på hver .time */
  }
  .time h2 {
    margin-bottom: 2rem;
    font-size: var(--h2-sizeD);
  }
  .time p {
    margin-bottom: 2rem;
    font-size: 1.5rem;
  }
  /* ramme til billederne så de er ens i height og width */
  .image_container {
    width: 100%;
    height: 500px; 
    overflow: hidden; 
    border-radius: 10px;
  }
  .time img {
    margin: 0;
    object-fit:cover;
    width: 100%;
    height: 100%;
  }
  article.time:nth-of-type(2n) {
    text-align: left;
  }
}
</style>

<script>
// animation moveUp
document.addEventListener("DOMContentLoaded",  () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          // Tjekker om elementet er synligt i vinduet
            if (entry.isIntersecting) {
                entry.target.classList.add('animated', 'moveUp');
                 // Stopper observationen af elementet, når animationen er udløst
                observer.unobserve(entry.target);
            }
        });
    }, {
       // Trigger svg pil når 10% af ".productlist" er synlig
        threshold: 0.1
    });

    document.querySelectorAll('.productlist').forEach(item => {
        observer.observe(item);
    });
});
</script>